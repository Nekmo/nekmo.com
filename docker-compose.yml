version: '2.4'
services:

  nginx_nekmocom:
    restart: on-failure
    image: "nginx"
    volumes:
      - ./conf/nginx_nekmocom/conf.d:/etc/nginx/conf.d:ro
      - ./conf/nginx_nekmocom/ssl:/etc/nginx/ssl:ro
      - ./data/nginx_nekmocom/log/:/var/log/nginx/
    volumes_from:
      - gunicorn_nekmocom
    networks:
      - web-router
      - default
    ports:
      - "80"
      - "443"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web-router"

      - "traefik.http.routers.paste.rule=Host(`nekmo.com`)"
      - "traefik.http.routers.paste.entrypoints=websecure"
      - "traefik.http.routers.paste.tls.certresolver=certbot"
    command: [ 'nginx-debug', '-g', 'daemon off;']

  nginx_nekmonet:
    restart: on-failure
    image: "nginx"
    volumes:
      - ./conf/nginx_nekmonet/conf.d:/etc/nginx/conf.d:ro
      - ./conf/nginx_nekmonet/ssl:/etc/nginx/ssl:ro
      - ./data/nginx_nekmonet/log/:/var/log/nginx/
    volumes_from:
      - gunicorn_nekmonet
    networks:
      - web-router
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web-router"

      - "traefik.http.routers.paste.rule=Host(`nekmo.net`)"
      - "traefik.http.routers.paste.entrypoints=websecure"
      - "traefik.http.routers.paste.tls.certresolver=certbot"
    ports:
      - "80"
      - "443"
    command: [ 'nginx-debug', '-g', 'daemon off;']

  gunicorn_nekmocom:
    restart: on-failure
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - .:/code
      - ./data/gunicorn/logs:/var/log/gunicorn/
      - ./data/gunicorn/media:/media
      - ./data/gunicorn/uploads:/uploads
      - ./data/gunicorn/static:/static
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: nekmocom.settings.production_nekmocom

  gunicorn_nekmonet:
    restart: on-failure
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes_from:
      - gunicorn_nekmocom
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: nekmocom.settings.production_nekmonet
      BUILD_DJANGO: 0

    # Sólo disponible en XFS montado con la opción pquota
    # storage_opt:
    #   size: '10G'

  postgres:
    restart: on-failure
    image: postgres:9.5
    volumes:
      - ./data/postgres/data:/var/lib/postgresql/data
    env_file:
      - .env

  memcached:
    restart: on-failure
    image: memcached
    env_file:
      - .env
networks:
  web-router:
    external: yes
    name: web-router
